import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Sample data directly in code
data = {
    'Size': [1000, 1500, 2000, 1200, 1800, 2500, 1600],
    'Location': ['Delhi', 'Mumbai', 'Delhi', 'Chennai', 'Mumbai', 'Delhi', 'Chennai'],
    'Number of Rooms': [2, 3, 4, 2, 3, 5, 3],
    'Price': [50, 80, 120, 60, 100, 150, 85]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Encode 'Location' using LabelEncoder
le = LabelEncoder()
df['Location'] = le.fit_transform(df['Location'])

# Features and Target
X = df[['Size', 'Location', 'Number of Rooms']]
y = df['Price']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluation
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse:.2f}")

# Compare actual vs predicted
result = pd.DataFrame({'Actual': y_test.values, 'Predicted': y_pred})
print(result)

# Plot
plt.scatter(y_test, y_pred, color='green')
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted House Prices")
plt.grid(True)
plt.show()
